ggplot(data = gapminder_data) +
aes(x = year, y = lifeExp, color = continent)+
geom_line()
ggplot(data = gapminder_data) +
aes(x = year, y = lifeExp, color = continent, group = country)+
geom_line()
ggplot(data = gapminder_data)+
geom_boxplot()
ggplot(data = gapminder_data_1997)+
aes(x=)
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_boxplot()
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
geom_point()
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_point()+
geom_violin()+
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_point()+
geom_violin()
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_point()+
geom_violin()
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
geom_point()
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
geom_point()+
aes(color=GDPpercap)
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
geom_point()+
aes(color=gdpPercap)
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
geom_point()
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
geom_jitter()
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
#jitter makes it so all your points arent overlapping
geom_jitter(width=0.2)
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
#jitter makes it so all your points arent overlapping
geom_jitter(width=0.01)
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
#jitter makes it so all your points arent overlapping
geom_jitter(width=0.1)
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
#jitter makes it so all your points arent overlapping
#be careful that it DOESNT effect height
geom_jitter(width=0.1, height = 0)
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
#jitter makes it so all your points arent overlapping
#be careful that it DOESNT effect height
geom_jitter(width=0.2, height = 0)
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
#jitter makes it so all your points arent overlapping
#be careful that it DOESNT effect height
geom_jitter(width=0.2, height = 0,
aes(size=pop))
aes(size=log(pop))
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
#jitter makes it so all your points arent overlapping
#be careful that it DOESNT effect height
#you can add aesthetics WITHIN geoms, this way, the violin doesn't change, but the points do
geom_jitter(width=0.2, height = 0,
ggplot(data = gapminder_1997)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
#jitter makes it so all your points arent overlapping
#be careful that it DOESNT effect height
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
#jitter makes it so all your points arent overlapping
#be careful that it DOESNT effect height
#you can add aesthetics WITHIN geoms, this way, the violin doesn't change, but the points do
geom_jitter(width=0.2, height = 0,
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()+
#you can add another layer to show all the points!
#order matters, if you do the violins FIRST, they will cover the points
#jitter makes it so all your points arent overlapping
#be careful that it DOESNT effect height
#you can add aesthetics WITHIN geoms, this way, the violin doesn't change, but the points do
geom_jitter(width=0.2, height = 0,
aes(size=pop))
ggplot(data = gapminder_1997)+
aes(x = gdpPercap, y = lifeExp)+
geom_point()
ggplot(data = gapminder_1997)+
aes(x = gdpPercap, y = lifeExp)+
geom_point()
ggplot(data = gapminder_1997)+
aes(x = gdpPercap, y = lifeExp)+
geom_point() +
scale_x_log10()
?scale_x_continuous
ggplot(data = gapminder_1997)+
aes(x = gdpPercap, y = lifeExp)+
geom_point() +
#to chance the axis
scale_x_continuous(trans = "log10")
ggplot(data = gapminder_1997)+
aes(x = log10(gdpPercap), y = lifeExp)+
geom_point() +
#to change the axis
scale_x_continuous(trans = "log10")
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin()
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
geom_violin(color = "green")
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
geom_violin(color = "green", fill = "blue")
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
geom_violin(color = "green", fill = "blue")+
geom_jitter()
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
geom_violin(color = "green", fill = "blue")+
geom_jitter(color = grey)
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
geom_violin(color = "green", fill = "blue")+
geom_jitter(color = grey)
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
geom_violin(color = "green", fill = "blue")+
geom_jitter(color = "grey")
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
geom_violin(color = "green", fill = "blue")+
geom_jitter(color = "purple")
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
geom_violin(color = continent , fill = "blue")+
geom_jitter(color = "purple")
#color defines outline
#fill fills it in with color
#if you want to map a VARIABLE, you need to use the aes() instead if just a single color def
geom_violin(aes(fill = continent)+
ggplot(data = gapminder_1997)+
#color defines outline
#color defines outline
#fill fills it in with color
#if you want to map a VARIABLE, you need to use the aes() instead if just a single color def
geom_jitter(color = "purple")
#color defines outline
#fill fills it in with color
#if you want to map a VARIABLE, you need to use the aes() instead if just a single color def
geom_violin(aes(fill = continent)+
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
#if you want to map a VARIABLE, you need to use the aes() instead if just a single color def
geom_violin(aes(fill = continent))+
geom_jitter(color = "purple")
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
#if you want to map a VARIABLE, you need to use the aes() instead if just a single color def
geom_violin(aes(fill = continent))+
geom_jitter(color = "black")
ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
#if you want to map a VARIABLE, you need to use the aes() instead if just a single color def
geom_violin(aes(fill = continent))+
geom_jitter(width= 0.3)
violin_plot <- ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
#if you want to map a VARIABLE, you need to use the aes() instead if just a single color def
geom_violin(aes(fill = continent))+
geom_jitter(width= 0.3)
#to save plot!
violin_plot
#to save plot!
#define plot as a variable, and now you can save them
#you can just add a plus sign to add more layers
violin_plot + theme_bw()
violin_plot <- ggplot(data = gapminder_1997)+
aes(x= continent, y=lifeExp)+
#color defines outline
#fill fills it in with color
#if you want to map a VARIABLE, you need to use the aes() instead if just a single color def
geom_violin(aes(fill = continent))+
geom_jitter(width= 0.3)
#to save plot
ggsave("awesome_violin_plot. jpg", plot violin_plot
width = 6, height = 4)
#to save plot
ggsave("awesome_violin_plot. jpg", plot=violin_plot,
width = 6, height = 4)
#to save plot
ggsave("awesome_violin_plot. jpg", plot=violin_plot,
width = 6, height = 4)
rlang::last_error()
#to save plot
ggsave("awesome_violin_plot.jpg", plot=violin_plot,
width = 6, height = 4)
view
#themes
#making a histgram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
geom_histogram()
#themes
#making a histgram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify
geom_histogram(bins = 20)
#themes
#making a histgram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = black)
#themes
#making a histgram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")
#themes
#making a histgram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_classic()
#themes
#making a histgram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_minimal()
#themes
#making a histogram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_bw()
#themes
#making a histogram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_bw(axis.text.x = element_text(angle = 90))
#themes
#making a histogram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_bw(element_text(angle = 90))
#themes
#making a histogram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_bw()=
theme(axis.text.x = element_text(angle = 90))
#themes
#making a histogram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_bw()=
theme(axis.text.x = element_text(angle = 90))
#themes
#making a histogram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90))
#themes
#making a histogram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_bw()+
#to rotate the x axis labeling
#lots of options under "theme"
theme(axis.text.x = element_text(angle = 90, color="red"))
#themes
#making a histogram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_bw()+
#to rotate the x axis labeling
#lots of options under "theme"
theme(axis.text.x = element_text(angle = 90))
#themes
#making a histogram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_bw()+
#to rotate the x axis labeling
#lots of options under "theme"
#vjust and hjust can move positioning
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#themes
#making a histogram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_bw()+
#to rotate the x axis labeling
#lots of options under "theme"
#vjust and hjust can move positioning
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
#themes
#making a histogram
ggplot(gapminder_1997)+
aes(x= lifeExp)+
#default bins is 30, you will get a message in your console unless you specify, you can also specify color, etc
geom_histogram(bins = 20, color = "black")+
theme_bw()+
#to rotate the x axis labeling
#lots of options under "theme"
#vjust and hjust can move positioning
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(gapminder_1997)+
aes(x = gdpPercap, y= lifeExp)
ggplot(gapminder_1997)+
aes(x = gdpPercap, y= lifeExp)+
geom_point()
ggplot(gapminder_1997)+
aes(x = gdpPercap, y= lifeExp)+
geom_point()+
facet_wrap(vars(continent))
ggplot(gapminder_1997)+
aes(x = gdpPercap, y= lifeExp)+
geom_point()+
#define which vraiable you want to vary with "vars"
facet_grid(rows = vars(continent))
ggplot(gapminder_1997)+
aes(x = gdpPercap, y= lifeExp, color = continent)+
geom_point()+
#define which vraiable you want to vary with "vars"
#grid will give us a SINGLE x axis
#this will give me different plots with JUST the data of a continent
facet_grid(rows = vars(continent)) +
labs(x="GDP Per Capita", y = "Life Expectancy",
title = "Do People in Wealthy Countries Live Longer?")+
theme_bw()
ggplot(gapminder_1997)+
aes(x = gdpPercap, y= lifeExp, color = continent)+
geom_point(size = population/1e6)+
#define which vraiable you want to vary with "vars"
#grid will give us a SINGLE x axis
#this will give me different plots with JUST the data of a continent
facet_grid(rows = vars(continent)) +
labs(x="GDP Per Capita", y = "Life Expectancy",
title = "Do People in Wealthy Countries Live Longer?")+
theme_bw()
ggplot(gapminder_1997)+
aes(x = gdpPercap, y= lifeExp, color = continent)+
geom_point(shape = 21)+
#define which vraiable you want to vary with "vars"
#grid will give us a SINGLE x axis
#this will give me different plots with JUST the data of a continent
facet_grid(rows = vars(continent)) +
labs(x="GDP Per Capita", y = "Life Expectancy",
title = "Do People in Wealthy Countries Live Longer?")+
theme_bw()
ggplot(gapminder_1997)+
aes(x = gdpPercap, y= lifeExp, fill = continent)+
#shapes are defined by numbers, you can look them up with google
geom_point(shape = 21, color = black)+
#define which vraiable you want to vary with "vars"
#grid will give us a SINGLE x axis
#this will give me different plots with JUST the data of a continent
facet_grid(rows = vars(continent)) +
labs(x="GDP Per Capita", y = "Life Expectancy",
title = "Do People in Wealthy Countries Live Longer?")+
theme_bw()
ggplot(gapminder_1997)+
aes(x = gdpPercap, y= lifeExp, fill = continent)+
#shapes are defined by numbers, you can look them up with google
geom_point(shape = 21, color = "black")+
#define which vraiable you want to vary with "vars"
#grid will give us a SINGLE x axis
#this will give me different plots with JUST the data of a continent
facet_grid(rows = vars(continent)) +
labs(x="GDP Per Capita", y = "Life Expectancy",
title = "Do People in Wealthy Countries Live Longer?")+
theme_bw()
ggsave("awesome_plot.jpg")
ggplot(gapminder_1997)+
aes(x = gdpPercap, y= lifeExp, fill = continent)+
#shapes are defined by numbers, you can look them up with google
geom_point(shape = 21, color = "black")+
#define which vraiable you want to vary with "vars"
#grid will give us a SINGLE x axis
#this will give me different plots with JUST the data of a continent
facet_grid(rows = vars(continent)) +
labs(x="GDP Per Capita", y = "Life Expectancy",
title = "Do People in Wealthy Countries Live Longer?")+
theme_bw()+
theme(axis.title = element_text(face = "bold"))
ggplot(gapminder_1997)+
aes(x = gdpPercap, y= lifeExp, fill = continent)+
#shapes are defined by numbers, you can look them up with google
geom_point(shape = 21, color = "black")+
#define which vraiable you want to vary with "vars"
#grid will give us a SINGLE x axis
#this will give me different plots with JUST the data of a continent
facet_grid(rows = vars(continent)) +
labs(x="GDP Per Capita", y = "Life Expectancy",
title = "Do People in Wealthy Countries Live Longer?")+
theme_bw()+
#axis.title tells us what we're modifying
#element_text tells us were modifying the text of the title
#face is bold, italtics, etc
theme(axis.title = element_text(face = "bold"),
legend.position = "none")
ggsave("awesome_plot.jpg")
